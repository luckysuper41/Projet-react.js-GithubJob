{"version":3,"sources":["coponent/useFetchJobs.js","coponent/Job.js","coponent/JobsPagination.js","coponent/SearchForm.js","App.js","serviceWorker.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","marginTop","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","placeholder","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","console","log","cancel","useFetchJobs","Container","param","target","prevParams","map","key","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bde743c8.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n//Phần này dùng để làm tính năng kiểm tra dữ liệu: Loading, error...\r\n\r\n\r\n//4 actions\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: 'make-request',\r\n  GET_DATA: 'get-data',\r\n  ERROR: 'error',\r\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n}\r\n\r\n//link to file json, data sur gitjob api https://cors-anywhere.herokuapp.com/\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return { loading: true, jobs: [] }\r\n    case ACTIONS.GET_DATA:\r\n      return { ...state, loading: false, jobs: action.payload.jobs }\r\n    case ACTIONS.ERROR:\r\n      return { ...state, loading: false, error: action.payload.error, jobs: [] }\r\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n      return { ...state, hasNextPage: action.payload.hasNextPage }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default function useFetchJobs(params, page) {\r\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\r\n  //cái này để get dữ liệu về, cũng như kiểm tra điều kiện để xảy ra các trường hợp\r\n  useEffect(() => {\r\n    const cancelToken1 = axios.CancelToken.source()\r\n    dispatch({ type: ACTIONS.MAKE_REQUEST })\r\n    axios.get(BASE_URL, {\r\n      cancelToken: cancelToken1.token,\r\n      params: { markdown: true, page: page, ...params }\r\n    }).then(res => {\r\n      dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } }) \r\n    }).catch(e => {\r\n      if (axios.isCancel(e)) return\r\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \r\n    })\r\n\r\n    // cái này để hiệu ứng trang  tới lùi thêm ..., xét điều kiện có thêm trang mới hay không ...\r\n    const cancelToken2 = axios.CancelToken.source()\r\n\r\n    axios.get(BASE_URL, {\r\n      cancelToken: cancelToken2.token,\r\n      params: { markdown: true, page: page + 1, ...params }\r\n    }).then(res => {\r\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } }) \r\n    }).catch(e => {\r\n      if (axios.isCancel(e)) return\r\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \r\n    })\r\n\r\n    console.log('tesxsxsxs')\r\n\r\n    return () => {\r\n      cancelToken1.cancel()\r\n      cancelToken2.cancel()\r\n    }\r\n  }, [params, page])\r\n  \r\n  return state\r\n}","import React, { useState } from 'react';\r\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap';\r\n//npm i react-markdown\r\n//dùng cái này để lấy đường dẫn liên kết\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\n\r\n//phần này dùng để tạo các card job nội dung, css dùng bootstrap\r\nexport default function Job({ job }) {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <Card.Title>\r\n              {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"text-muted mb-2\">\r\n              {new Date(job.created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\r\n            <Badge variant=\"secondary\">{job.location}</Badge>\r\n            <div style={{ wordBreak: 'break-all' }}>\r\n              <ReactMarkdown source={job.how_to_apply} />\r\n            </div>\r\n          </div>\r\n          <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo} />\r\n        </div>\r\n        <Card.Text>\r\n          <Button\r\n            onClick={() => setOpen(prevOpen => !prevOpen)}\r\n            variant=\"primary\"\r\n          >\r\n            {open ? 'Hide Details' : 'View Details'}\r\n          </Button>\r\n        </Card.Text>\r\n        <Collapse in={open}>\r\n          <div className=\"mt-4\">\r\n            <ReactMarkdown source={job.description} />\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\n\r\n// cái này dùng để tạo chuyển page\r\n\r\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\r\n  function adjustPage(amount) {\r\n    setPage(prevPage => prevPage + amount)\r\n  }\r\n\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Form, Col } from 'react-bootstrap';\r\n\r\nconst style = {\r\n  marginTop: '75px'\r\n};\r\n\r\n//cái này là tool search\r\nexport default function SearchForm({ params, onParamChange }) {\r\n  return (\r\n    <Form className=\"mb-4\" style={style}>\r\n      <Form.Row className=\"align-items-end\">\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\" placeholder='Filter by title, benefits, companies, expertise' />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control onChange={onParamChange} value={params.location} name=\"location\" type=\"text\" placeholder='Filter by city, state, zip code or country' />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\r\n          <Form.Check onChange={onParamChange} value={params.full_time} name=\"full_time\" id=\"full-time\" label=\"Only Full Time\" type=\"checkbox\" className=\"mb-2\" />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\n//npm i axios react-bootstrap\nimport { Container } from 'react-bootstrap';\nimport useFetchJobs from './coponent/useFetchJobs';\nimport Job from './coponent/Job';\nimport JobsPagination from './coponent/JobsPagination';\nimport SearchForm from './coponent/SearchForm';\nimport './app.css';\n\n\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  //dùng để tìm kiếm khi search, bd từ trang 1 đến các trang kế tiếp\n  function handleParamChange(e) {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value }\n    })\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <div className='header'>\n        <div className=\"header-content\"><span>GitHub</span> Jobs</div>\n      </div>\n    \n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h2>Loading...</h2>}\n      {error && <h2>Error. Try Refreshing.</h2>}\n      {jobs.map(job => {\n        return <Job key={job.id} job={job} />\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}